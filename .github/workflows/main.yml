name: CI

on:
  push:
    branches: [ main, rust ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  infrastructure:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      ##############################################
      #   CREATE REGISTRY AND KUBERNETES CLUSTER   #
      ##############################################
      # - uses: azure/arm-deploy@v2
      #   with:
      #     scope: resourcegroup
      #     resourceGroupName: rg-website-test-001
      #     template: main.bicep

      #################################################
      #    BUILD AND PUSH FDOCKER IMAGE TO REGISTRY   #
      #################################################
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: mcpuacr.azurecr.io
      - uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:server" # ??
          tags: mcpuacr.azurecr.io/rust-std-web-server:latest
          push: true

      ##########################
      #   PUSH TO KUBERNETES   #
      ##########################
      - uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
  
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group rg-website-test-001 --name mcpuaks
  
      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/deployment.yml
      # kubectl rollout status deployment/my-deployment
